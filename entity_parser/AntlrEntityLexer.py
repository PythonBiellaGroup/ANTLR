# Generated from AntlrEntityLexer.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,88,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
        1,11,4,11,78,8,11,11,11,12,11,79,1,12,4,12,83,8,12,11,12,12,12,84,
        1,12,1,12,0,0,13,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,1,0,17,2,0,73,73,105,105,2,0,78,78,110,110,2,0,84,
        84,116,116,2,0,69,69,101,101,2,0,71,71,103,103,2,0,82,82,114,114,
        2,0,66,66,98,98,2,0,79,79,111,111,2,0,76,76,108,108,2,0,65,65,97,
        97,2,0,83,83,115,115,2,0,89,89,121,121,2,0,77,77,109,109,2,0,68,
        68,100,100,2,0,85,85,117,117,2,0,65,90,97,122,3,0,9,10,13,13,32,
        32,89,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,1,27,1,0,0,0,3,35,1,0,0,
        0,5,43,1,0,0,0,7,50,1,0,0,0,9,57,1,0,0,0,11,64,1,0,0,0,13,66,1,0,
        0,0,15,68,1,0,0,0,17,70,1,0,0,0,19,72,1,0,0,0,21,74,1,0,0,0,23,77,
        1,0,0,0,25,82,1,0,0,0,27,28,7,0,0,0,28,29,7,1,0,0,29,30,7,2,0,0,
        30,31,7,3,0,0,31,32,7,4,0,0,32,33,7,3,0,0,33,34,7,5,0,0,34,2,1,0,
        0,0,35,36,7,6,0,0,36,37,7,7,0,0,37,38,7,7,0,0,38,39,7,8,0,0,39,40,
        7,3,0,0,40,41,7,9,0,0,41,42,7,1,0,0,42,4,1,0,0,0,43,44,7,10,0,0,
        44,45,7,2,0,0,45,46,7,5,0,0,46,47,7,0,0,0,47,48,7,1,0,0,48,49,7,
        4,0,0,49,6,1,0,0,0,50,51,7,3,0,0,51,52,7,1,0,0,52,53,7,2,0,0,53,
        54,7,0,0,0,54,55,7,2,0,0,55,56,7,11,0,0,56,8,1,0,0,0,57,58,7,12,
        0,0,58,59,7,7,0,0,59,60,7,13,0,0,60,61,7,14,0,0,61,62,7,8,0,0,62,
        63,7,3,0,0,63,10,1,0,0,0,64,65,5,58,0,0,65,12,1,0,0,0,66,67,5,59,
        0,0,67,14,1,0,0,0,68,69,5,91,0,0,69,16,1,0,0,0,70,71,5,93,0,0,71,
        18,1,0,0,0,72,73,5,123,0,0,73,20,1,0,0,0,74,75,5,125,0,0,75,22,1,
        0,0,0,76,78,7,15,0,0,77,76,1,0,0,0,78,79,1,0,0,0,79,77,1,0,0,0,79,
        80,1,0,0,0,80,24,1,0,0,0,81,83,7,16,0,0,82,81,1,0,0,0,83,84,1,0,
        0,0,84,82,1,0,0,0,84,85,1,0,0,0,85,86,1,0,0,0,86,87,6,12,0,0,87,
        26,1,0,0,0,3,0,79,84,1,0,1,0
    ]

class AntlrEntityLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INTEGER = 1
    BOOLEAN = 2
    STRING = 3
    ENTITY = 4
    MODULE = 5
    COLON = 6
    SEMI = 7
    LSQRD = 8
    RSQRD = 9
    LCRLY = 10
    RCRLY = 11
    ID = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'integer'", "'boolean'", "'string'", "'entity'", "'module'", 
            "':'", "';'", "'['", "']'", "'{'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "INTEGER", "BOOLEAN", "STRING", "ENTITY", "MODULE", "COLON", 
            "SEMI", "LSQRD", "RSQRD", "LCRLY", "RCRLY", "ID", "WS" ]

    ruleNames = [ "INTEGER", "BOOLEAN", "STRING", "ENTITY", "MODULE", "COLON", 
                  "SEMI", "LSQRD", "RSQRD", "LCRLY", "RCRLY", "ID", "WS" ]

    grammarFileName = "AntlrEntityLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


